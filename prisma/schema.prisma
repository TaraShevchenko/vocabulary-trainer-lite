// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    // NOTE: When using postgresql with Clerk authentication
    // User data is managed by Clerk, we only store additional app-specific data
    url      = env("DATABASE_URL")
}

// ============================================================================
// ПОЛЬЗОВАТЕЛИ (интеграция с Clerk)
// ============================================================================

model User {
    id        String  @id // Clerk user ID
    email     String  @unique
    firstName String?
    lastName  String?
    name      String? // Computed field: firstName + lastName
    imageUrl  String?
    username  String? @unique

    // Clerk metadata
    clerkCreatedAt DateTime?
    clerkUpdatedAt DateTime?

    // App metadata
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    // Связи
    createdGroups  WordGroup[] @relation("CreatedGroups")
    favoriteGroups WordGroup[] @relation("FavoriteGroups")
    progress       Progress[]

    @@index([email])
    @@index([username])
    @@map("users")
}

// ============================================================================
// ГРУППЫ СЛОВ
// ============================================================================

model WordGroup {
    id          String  @id @default(cuid())
    name        String  @unique
    description String?
    isGlobal    Boolean @default(true) // Глобальные группы доступны всем

    // Опциональная связь с создателем (только для пользовательских групп)
    createdBy   String?
    creator     User?   @relation("CreatedGroups", fields: [createdBy], references: [id], onDelete: Cascade)
    
    // Связи
    words           Word[]
    favoritedByUsers User[] @relation("FavoriteGroups")

    // Метаданные
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@index([name])
    @@index([createdBy])
    @@index([isGlobal])
    @@map("word_groups")
}

// ============================================================================
// ПРОГРЕСС ПОЛЬЗОВАТЕЛЕЙ
// ============================================================================

model Progress {
    id     String @id @default(cuid())
    userId String
    wordId String
    score  Int    @default(0) // от 0 до 100

    // Связи
    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
    word Word @relation(fields: [wordId], references: [id], onDelete: Cascade)

    // Метаданные
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@unique([userId, wordId]) // Один прогресс на пользователя на слово
    @@index([userId])
    @@index([wordId])
    @@map("progress")
}

// ============================================================================
// СЛОВА
// ============================================================================

model Word {
    id          String @id @default(cuid())
    english     String
    russian     String
    description String

    // Связи
    groupId  String
    group    WordGroup  @relation(fields: [groupId], references: [id], onDelete: Cascade)
    progress Progress[]

    // Метаданные
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt

    @@unique([english, groupId]) // Уникальность слова в рамках группы
    @@index([groupId])
    @@index([english])
    @@map("words")
}
